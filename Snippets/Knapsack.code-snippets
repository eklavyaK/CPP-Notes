{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "gggg_gknapsack",
		"body": [
			"// gets all possible sums and returns the minimum difference between sum of two subsets",
			"// to get the minimum difference instead for sum, use sum/2 everywhere, and first eliminate the case where mx_element >= sum / 2",
			"int knapsack(vector<int> & v){",
				"\tint n = v.size(), sum = 0;",
				"\tfor(int i = 0; i < n; i++) sum += v[i];",
				"\tvector<int> act, cnt(sum + 1), can(sum + 1);",
				"\tfor(int i = 0; i < n; i++) cnt[v[i]]++;",
				"\tfor(int i = 1; i <= sum; i++){",
					"\t\tif(!cnt[i]) continue;",
					"\t\tint cur = 1;",
					"\t\twhile(cur < cnt[i]) act.push_back(cur * i), cnt[i] -= cur, cur <<= 1;",
					"\t\tif(cnt[i]) act.push_back(cnt[i] * i);",
				"\t}",
				"\tcan[0] = 1;",
				"\tfor(auto u : act){",
					"\t\tfor(int i = sum; i >= u; i--) if(can[i - u]) can[i] = 1;",
				"\t}",
				"\tint ans = sum;",
				"\tfor(int i = 1; i <= sum/2; i++) if(can[i]) ans = min(ans, sum - 2 * i);",
				"\treturn ans;",
			"}",
		],
		"description": "Log output to console"
	}
}