{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "gggg_gbinomial_gcoefficient",
		"body": [
			"ll power(ll n, ll k){",
			"	long  long ans = 1;",
			"	while(k>0){",
			"		if(k&1)ans = (ans*n)%mod1;",
			"		k>>=1; n = (n*n)%mod1;",
			"	}",
			"	return ans;",
			"}",
			"ll factorial(ll n){",
			"	ll ans = 1;",
			"	for(int i=2;i<=n;i++){",
			"		ans=(ans*i)%mod1;",
			"	}",
			"	return ans;",
			"}",
			"ll modularInverse(ll a, ll p){",
			"	return power(a,p-2);", //(a^(-1))%p
			"}",
			"ll binomialCoefficient(ll n, ll r){",
			"	return (((factorial(n) * modularInverse(factorial(r),mod1))%mod1) * modularInverse(factorial(n-r),mod1))%mod1;",
			"}",
		],
		"description": "gggg_binomialCoefficient"
	}
}