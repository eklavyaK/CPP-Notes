{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "gggg_gprime_gfactorisation",
		"body": [
			"const int N = 2e5+5;",
			"int spf[N];",
			"void spfac(int n){//call this function first",
				"\tint checker = sqrt(n);",
				"\tfor(int i=1;i<=n;i++)spf[i]=i;",
				"\tfor(int i=2;i<=checker;i++){",
					"\t\tif(spf[i]!=i)continue;",
					"\t\tfor(int c=i*i;c<=n;c+=i)",
					"\t\tif(spf[c]==c)spf[c]=i;",
				"\t}",
			"}",
			"vector<int> pfac;",
			"void primeFactorisation(int n){",
				"\tpfac.clear();while(n!=1)",
				"\tpfac.push_back(spf[n]),n/=spf[n];",
			"}",
		],
		"description": "Log output to console"
	}
}