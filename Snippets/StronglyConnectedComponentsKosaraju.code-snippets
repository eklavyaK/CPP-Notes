{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "cpp",
		"prefix": "gggg_graphscc_gkosaraju",
		"body": [
		"const int N = 1e5+5;",
		"int vis[N],n,m,cnt=1;",
		"vector<int> ans[N];"
		"vector<vector<int>> graph(N);",
		"vector<vector<int>> revgraph(N);",
		"stack<int> comps;",
		"void dfs(int node){",
		"	vis[node]=1;",
		"	for(auto i : graph[node]){",
		"		if(!vis[i]) dfs(i);",
		"	}",
		"	comps.push(node);",
		"}",
		"void revdfs(int node){",
		"	vis[node]=0;",
		"	ans[cnt].push_back(node);",
		"	for(auto i : revgraph[node]){",
		"		if(vis[i]) revdfs(i);",
		"	}",
		"}",
		"void SCC(){",
		"	for(int v=1;v<=n;v++){",
		"		for(auto u : graph[v])",
		"		revgraph[u].push_back(v);",
		"	}",
		"	for(int i=1;i<=n;i++){",
		"		if(!vis[i]) dfs(i);",
		"	}",
		"	while(!comps.empty()){",
		"		int c = comps.top();",
		"		comps.pop();",
		"		if(!vis[c])continue;",
		"		revdfs(c); cnt++;",
		"	}",
		"}",
		],
		"description": "Log output to console"
	}
}